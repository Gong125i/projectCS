const pool = require('./config/database');
const fs = require('fs');
const path = require('path');

async function setupDatabase() {
  try {
    console.log('‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•...');

    // Read and execute schema
    const schemaPath = path.join(__dirname, 'database', 'schema.sql');
    const schema = fs.readFileSync(schemaPath, 'utf8');
    
    await pool.query(schema);
    console.log('‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß');

    // Insert sample data
    console.log('‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á...');

    // Add sample advisor
    await pool.query(`
      INSERT INTO users (student_id, first_name, last_name, phone, email, office, role) 
      VALUES ($1, $2, $3, $4, $5, $6, $7)
      ON CONFLICT (phone) DO NOTHING
    `, ['0001', '‡∏≠‡∏≤‡∏à‡∏≤‡∏£‡∏¢‡πå', '‡∏ó‡∏î‡∏™‡∏≠‡∏ö', '0812345678', 'advisor@test.com', '‡∏´‡πâ‡∏≠‡∏á 101', 'advisor']);

    // Add sample student
    await pool.query(`
      INSERT INTO users (student_id, first_name, last_name, phone, role) 
      VALUES ($1, $2, $3, $4, $5)
      ON CONFLICT (phone) DO NOTHING
    `, ['6400000001', '‡∏ô‡∏±‡∏Å‡∏®‡∏∂‡∏Å‡∏©‡∏≤', '‡∏ó‡∏î‡∏™‡∏≠‡∏ö', '0898765432', 'student']);

    console.log('‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß');

    // Create sample project
    const advisorResult = await pool.query('SELECT id FROM users WHERE phone = $1', ['0812345678']);
    const studentResult = await pool.query('SELECT id FROM users WHERE phone = $1', ['0898765432']);

    if (advisorResult.rows.length > 0 && studentResult.rows.length > 0) {
      const advisorId = advisorResult.rows[0].id;
      const studentId = studentResult.rows[0].id;

      // Create project
      const projectResult = await pool.query(
        'INSERT INTO projects (name, advisor_id) VALUES ($1, $2) RETURNING id',
        ['‡πÇ‡∏Ñ‡∏£‡∏á‡∏á‡∏≤‡∏ô‡∏ó‡∏î‡∏™‡∏≠‡∏ö', advisorId]
      );

      if (projectResult.rows.length > 0) {
        const projectId = projectResult.rows[0].id;

        // Add student to project
        await pool.query(
          'INSERT INTO project_students (project_id, student_id) VALUES ($1, $2) ON CONFLICT DO NOTHING',
          [projectId, studentId]
        );

        console.log('‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏Ñ‡∏£‡∏á‡∏á‡∏≤‡∏ô‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß');
      }
    }

    console.log('\nüéâ ‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô!');
    console.log('\n‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö:');
    console.log('‡∏≠‡∏≤‡∏à‡∏≤‡∏£‡∏¢‡πå‡∏ó‡∏µ‡πà‡∏õ‡∏£‡∏∂‡∏Å‡∏©‡∏≤: ‡πÄ‡∏•‡∏Ç‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡∏ï‡∏±‡∏ß 0001, ‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£ 0812345678');
    console.log('‡∏ô‡∏±‡∏Å‡∏®‡∏∂‡∏Å‡∏©‡∏≤: ‡πÄ‡∏•‡∏Ç‡∏ô‡∏±‡∏Å‡∏®‡∏∂‡∏Å‡∏©‡∏≤ 6400000001, ‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£ 0898765432');

  } catch (error) {
    console.error('‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•:', error.message);
  } finally {
    await pool.end();
  }
}

setupDatabase();
